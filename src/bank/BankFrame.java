/*
/*
/*
/*
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bank;


import core.models.Account;
import core.models.BasicAccount;
import core.models.Transaction;
import core.models.TransactionFactory;
import core.models.TransactionType;
import core.models.User;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author edangulo
 */
public class BankFrame extends javax.swing.JFrame {
    
    private ArrayList<Account> accounts;
    private ArrayList<Transaction> transactions;
    private ArrayList<User> users;
    
    /**
     * Creates new form BankFrame
     */
    public BankFrame() {
        initComponents();
        this.accounts = new ArrayList<>();
        this.transactions = new ArrayList<>();
        this.users = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        PanelOpciones = new javax.swing.JTabbedPane();
        RegistroUsuarioView = new javax.swing.JPanel();
        RegistroUsuarioTituloLabel = new javax.swing.JLabel();
        RegistroUsuarioIdLabel = new javax.swing.JLabel();
        RegistroUsuarioFirstnameLabel = new javax.swing.JLabel();
        RegistroUsuarioLastnameLabel = new javax.swing.JLabel();
        RegistroUsuarioAgeLabel = new javax.swing.JLabel();
        RegistroUsuarioIdInput = new javax.swing.JTextField();
        RegistroUsuarioFirstnameInput = new javax.swing.JTextField();
        RegistroUsuarioLastnameInput = new javax.swing.JTextField();
        RegistroUsuarioAgeInput = new javax.swing.JTextField();
        RegistroUsuarioBoton = new javax.swing.JButton();
        CrearCuentaView = new javax.swing.JPanel();
        CrearCuentaTituloLabel = new javax.swing.JLabel();
        CrearCuentaIdUsuarioLabel = new javax.swing.JLabel();
        CrearCuentaBalanceInicialLabel = new javax.swing.JLabel();
        CrearCuentaIdUsuarioInput = new javax.swing.JTextField();
        CrearCuentaBalanceInicialInput = new javax.swing.JTextField();
        CrearCuentaBoton = new javax.swing.JButton();
        HacerTransaccionView = new javax.swing.JPanel();
        HacerTransaccionTitulo = new javax.swing.JLabel();
        HacerTransaccionTypeLabel = new javax.swing.JLabel();
        HacerTransaccionCuentaOrigenLabel = new javax.swing.JLabel();
        HacerTransaccionCuentaDestinoLabel = new javax.swing.JLabel();
        HacerTransaccionAmountLabel = new javax.swing.JLabel();
        HacerTransaccionCuentaOrigenInput = new javax.swing.JTextField();
        HacerTransaccionCuentaDestinoInput = new javax.swing.JTextField();
        HacerTransaccionAmountInput = new javax.swing.JTextField();
        HacerTransaccionTypeInput = new javax.swing.JComboBox<>();
        HacerTransaccionBotonRealizar = new javax.swing.JButton();
        ListarUsuariosView = new javax.swing.JPanel();
        ListUsersTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListUsersTabla = new javax.swing.JTable();
        ListUsersBotonRefrescar = new javax.swing.JButton();
        ListarCuentasView = new javax.swing.JPanel();
        ListAccountsTitulo = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListAccountsTabla = new javax.swing.JTable();
        ListAccountsBotonRefrescar = new javax.swing.JButton();
        ListarTransaccionesView = new javax.swing.JPanel();
        ListaTransaccionesTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaTransaccionesTabla = new javax.swing.JTable();
        ListaTransaccionesBotonRefrescar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        RegistroUsuarioTituloLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        RegistroUsuarioTituloLabel.setText("Register User");

        RegistroUsuarioIdLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        RegistroUsuarioIdLabel.setText("ID");

        RegistroUsuarioFirstnameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        RegistroUsuarioFirstnameLabel.setText("Firstname");

        RegistroUsuarioLastnameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        RegistroUsuarioLastnameLabel.setText("Lastname");

        RegistroUsuarioAgeLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        RegistroUsuarioAgeLabel.setText("Age");

        RegistroUsuarioIdInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistroUsuarioIdInputActionPerformed(evt);
            }
        });
        RegistroUsuarioIdInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                RegistroUsuarioIdInputKeyTyped(evt);
            }
        });

        RegistroUsuarioBoton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        RegistroUsuarioBoton.setText("Register");
        RegistroUsuarioBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistroUsuarioBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RegistroUsuarioViewLayout = new javax.swing.GroupLayout(RegistroUsuarioView);
        RegistroUsuarioView.setLayout(RegistroUsuarioViewLayout);
        RegistroUsuarioViewLayout.setHorizontalGroup(
            RegistroUsuarioViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegistroUsuarioViewLayout.createSequentialGroup()
                .addGroup(RegistroUsuarioViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RegistroUsuarioViewLayout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(RegistroUsuarioTituloLabel)
                        .addGap(0, 270, Short.MAX_VALUE))
                    .addGroup(RegistroUsuarioViewLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(RegistroUsuarioViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RegistroUsuarioFirstnameLabel)
                            .addComponent(RegistroUsuarioLastnameLabel)
                            .addComponent(RegistroUsuarioAgeLabel)
                            .addComponent(RegistroUsuarioIdLabel))
                        .addGap(18, 18, 18)
                        .addGroup(RegistroUsuarioViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RegistroUsuarioIdInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(RegistroUsuarioLastnameInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(RegistroUsuarioAgeInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(RegistroUsuarioFirstnameInput, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
            .addGroup(RegistroUsuarioViewLayout.createSequentialGroup()
                .addGap(259, 259, 259)
                .addComponent(RegistroUsuarioBoton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RegistroUsuarioViewLayout.setVerticalGroup(
            RegistroUsuarioViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegistroUsuarioViewLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(RegistroUsuarioTituloLabel)
                .addGap(18, 18, 18)
                .addGroup(RegistroUsuarioViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegistroUsuarioIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegistroUsuarioIdLabel))
                .addGap(18, 18, 18)
                .addGroup(RegistroUsuarioViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegistroUsuarioFirstnameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegistroUsuarioFirstnameLabel))
                .addGap(18, 18, 18)
                .addGroup(RegistroUsuarioViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegistroUsuarioLastnameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegistroUsuarioLastnameLabel))
                .addGap(18, 18, 18)
                .addGroup(RegistroUsuarioViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegistroUsuarioAgeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegistroUsuarioAgeLabel))
                .addGap(18, 18, 18)
                .addComponent(RegistroUsuarioBoton)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        PanelOpciones.addTab("Register User", RegistroUsuarioView);

        CrearCuentaTituloLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        CrearCuentaTituloLabel.setText("Create Account");

        CrearCuentaIdUsuarioLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        CrearCuentaIdUsuarioLabel.setText("User ID");

        CrearCuentaBalanceInicialLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        CrearCuentaBalanceInicialLabel.setText("Initial Balance");

        CrearCuentaBoton.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        CrearCuentaBoton.setText("Create");
        CrearCuentaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearCuentaBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CrearCuentaViewLayout = new javax.swing.GroupLayout(CrearCuentaView);
        CrearCuentaView.setLayout(CrearCuentaViewLayout);
        CrearCuentaViewLayout.setHorizontalGroup(
            CrearCuentaViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearCuentaViewLayout.createSequentialGroup()
                .addGroup(CrearCuentaViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CrearCuentaViewLayout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(CrearCuentaTituloLabel))
                    .addGroup(CrearCuentaViewLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(CrearCuentaViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CrearCuentaIdUsuarioLabel)
                            .addComponent(CrearCuentaBalanceInicialLabel))
                        .addGap(18, 18, 18)
                        .addGroup(CrearCuentaViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CrearCuentaBalanceInicialInput)
                            .addComponent(CrearCuentaIdUsuarioInput, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(CrearCuentaViewLayout.createSequentialGroup()
                .addGap(265, 265, 265)
                .addComponent(CrearCuentaBoton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CrearCuentaViewLayout.setVerticalGroup(
            CrearCuentaViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearCuentaViewLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(CrearCuentaTituloLabel)
                .addGap(18, 18, 18)
                .addGroup(CrearCuentaViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CrearCuentaIdUsuarioInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CrearCuentaIdUsuarioLabel))
                .addGap(18, 18, 18)
                .addGroup(CrearCuentaViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CrearCuentaBalanceInicialInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CrearCuentaBalanceInicialLabel))
                .addGap(18, 18, 18)
                .addComponent(CrearCuentaBoton)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        PanelOpciones.addTab("Create Account", CrearCuentaView);

        HacerTransaccionTitulo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        HacerTransaccionTitulo.setText("Make Transaction");

        HacerTransaccionTypeLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        HacerTransaccionTypeLabel.setText("Type");

        HacerTransaccionCuentaOrigenLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        HacerTransaccionCuentaOrigenLabel.setText("Source Account");

        HacerTransaccionCuentaDestinoLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        HacerTransaccionCuentaDestinoLabel.setText("Destination Account");

        HacerTransaccionAmountLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        HacerTransaccionAmountLabel.setText("Amount");

        HacerTransaccionCuentaDestinoInput.setToolTipText("");

        HacerTransaccionAmountInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HacerTransaccionAmountInputActionPerformed(evt);
            }
        });

        HacerTransaccionTypeInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Deposit", "Withdraw", "Transfer" }));

        HacerTransaccionBotonRealizar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        HacerTransaccionBotonRealizar.setText("Execute");
        HacerTransaccionBotonRealizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HacerTransaccionBotonRealizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HacerTransaccionViewLayout = new javax.swing.GroupLayout(HacerTransaccionView);
        HacerTransaccionView.setLayout(HacerTransaccionViewLayout);
        HacerTransaccionViewLayout.setHorizontalGroup(
            HacerTransaccionViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HacerTransaccionViewLayout.createSequentialGroup()
                .addGroup(HacerTransaccionViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HacerTransaccionViewLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(HacerTransaccionViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HacerTransaccionTypeLabel)
                            .addComponent(HacerTransaccionAmountLabel)
                            .addComponent(HacerTransaccionCuentaDestinoLabel)
                            .addComponent(HacerTransaccionCuentaOrigenLabel))
                        .addGap(18, 18, 18)
                        .addGroup(HacerTransaccionViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HacerTransaccionCuentaDestinoInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(HacerTransaccionCuentaOrigenInput, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(HacerTransaccionTypeInput, 0, 485, Short.MAX_VALUE)
                            .addComponent(HacerTransaccionAmountInput, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(HacerTransaccionViewLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(HacerTransaccionTitulo)))
                .addContainerGap())
            .addGroup(HacerTransaccionViewLayout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(HacerTransaccionBotonRealizar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HacerTransaccionViewLayout.setVerticalGroup(
            HacerTransaccionViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HacerTransaccionViewLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(HacerTransaccionTitulo)
                .addGap(18, 18, 18)
                .addGroup(HacerTransaccionViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HacerTransaccionTypeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HacerTransaccionTypeLabel))
                .addGap(18, 18, 18)
                .addGroup(HacerTransaccionViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HacerTransaccionCuentaOrigenInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HacerTransaccionCuentaOrigenLabel))
                .addGap(18, 18, 18)
                .addGroup(HacerTransaccionViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HacerTransaccionCuentaDestinoInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HacerTransaccionCuentaDestinoLabel))
                .addGap(18, 18, 18)
                .addGroup(HacerTransaccionViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HacerTransaccionAmountInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HacerTransaccionAmountLabel))
                .addGap(18, 18, 18)
                .addComponent(HacerTransaccionBotonRealizar)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        PanelOpciones.addTab("Make Transaction", HacerTransaccionView);

        ListUsersTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ListUsersTitle.setText("List Users");

        ListUsersTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Fullname", "Age", "Number of Accounts"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ListUsersTabla);

        ListUsersBotonRefrescar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        ListUsersBotonRefrescar.setText("Refresh");
        ListUsersBotonRefrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListUsersBotonRefrescarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ListarUsuariosViewLayout = new javax.swing.GroupLayout(ListarUsuariosView);
        ListarUsuariosView.setLayout(ListarUsuariosViewLayout);
        ListarUsuariosViewLayout.setHorizontalGroup(
            ListarUsuariosViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListarUsuariosViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ListarUsuariosViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ListarUsuariosViewLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(ListarUsuariosViewLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(ListUsersTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ListUsersBotonRefrescar)
                        .addGap(88, 88, 88))))
        );
        ListarUsuariosViewLayout.setVerticalGroup(
            ListarUsuariosViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListarUsuariosViewLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(ListarUsuariosViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ListUsersTitle)
                    .addComponent(ListUsersBotonRefrescar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelOpciones.addTab("List Users", ListarUsuariosView);

        ListAccountsTitulo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ListAccountsTitulo.setText("List Accounts");

        ListAccountsTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "User ID", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(ListAccountsTabla);

        ListAccountsBotonRefrescar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        ListAccountsBotonRefrescar.setText("Refresh");
        ListAccountsBotonRefrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListAccountsBotonRefrescarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ListarCuentasViewLayout = new javax.swing.GroupLayout(ListarCuentasView);
        ListarCuentasView.setLayout(ListarCuentasViewLayout);
        ListarCuentasViewLayout.setHorizontalGroup(
            ListarCuentasViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListarCuentasViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(ListarCuentasViewLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(ListAccountsTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ListAccountsBotonRefrescar)
                .addGap(90, 90, 90))
        );
        ListarCuentasViewLayout.setVerticalGroup(
            ListarCuentasViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListarCuentasViewLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(ListarCuentasViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ListAccountsTitulo)
                    .addComponent(ListAccountsBotonRefrescar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelOpciones.addTab("List Accounts", ListarCuentasView);

        ListaTransaccionesTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ListaTransaccionesTitle.setText("List Transactions");

        ListaTransaccionesTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Type", "Source Account ID", "Destination Account ID", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ListaTransaccionesTabla);

        ListaTransaccionesBotonRefrescar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        ListaTransaccionesBotonRefrescar.setText("Refresh");
        ListaTransaccionesBotonRefrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListaTransaccionesBotonRefrescarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ListarTransaccionesViewLayout = new javax.swing.GroupLayout(ListarTransaccionesView);
        ListarTransaccionesView.setLayout(ListarTransaccionesViewLayout);
        ListarTransaccionesViewLayout.setHorizontalGroup(
            ListarTransaccionesViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListarTransaccionesViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(ListarTransaccionesViewLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(ListaTransaccionesTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ListaTransaccionesBotonRefrescar)
                .addGap(89, 89, 89))
        );
        ListarTransaccionesViewLayout.setVerticalGroup(
            ListarTransaccionesViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListarTransaccionesViewLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(ListarTransaccionesViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ListaTransaccionesTitle)
                    .addComponent(ListaTransaccionesBotonRefrescar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelOpciones.addTab("List Transactions", ListarTransaccionesView);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelOpciones)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }//GEN-END:initComponents

    private void ListaTransaccionesBotonRefrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListaTransaccionesBotonRefrescarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ListaTransaccionesTabla.getModel();
        model.setRowCount(0);

        ArrayList<Transaction> transactionsCopy = (ArrayList<Transaction>) this.transactions.clone();
        Collections.reverse(transactionsCopy);

        for (Transaction transaction : transactionsCopy) {
            model.addRow(new Object[]{
                transaction.getType(),
                transaction.getSourceAccountId(),
                transaction.getDestinationAccountId(),
                transaction.getAmount()
            });
        }
    }//GEN-LAST:event_ListaTransaccionesBotonRefrescarActionPerformed

    private void ListAccountsBotonRefrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListAccountsBotonRefrescarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ListAccountsTabla.getModel();
        model.setRowCount(0);

        this.accounts.sort((obj1, obj2) -> (obj1.getId().compareTo(obj2.getId())));

        for (Account account : this.accounts) {
            model.addRow(new Object[]{account.getId(), account.getOwner().getId(), account.getBalance()});
        }
    }//GEN-LAST:event_ListAccountsBotonRefrescarActionPerformed

    private void ListUsersBotonRefrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListUsersBotonRefrescarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ListUsersTabla.getModel();
        model.setRowCount(0);

        this.users.sort((obj1, obj2) -> (obj1.getId() - obj2.getId()));

        for (User user : this.users) {
            model.addRow(new Object[]{user.getId(), user.getFirstname() + " " + user.getLastname(), user.getAge(), user.getNumAccounts()});
        }
    }//GEN-LAST:event_ListUsersBotonRefrescarActionPerformed

    private void HacerTransaccionBotonRealizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HacerTransaccionBotonRealizarActionPerformed
        // TODO add your handling code here:
        try {
            String type = HacerTransaccionTypeInput.getItemAt(HacerTransaccionTypeInput.getSelectedIndex());
            switch (type) {
                case "Deposit": {
                    String destinationAccountId = HacerTransaccionCuentaDestinoInput.getText();
                    double amount = Double.parseDouble(HacerTransaccionAmountInput.getText());

                    Account destinationAccount = null;
                    for (Account account : this.accounts) {
                        if (account.getId().equals(destinationAccountId)) {
                            destinationAccount = account;
                        }
                    }
                    if (destinationAccount != null) {
                        destinationAccount.deposit(amount);

                        this.transactions.add(TransactionFactory.createDeposit(destinationAccount, amount));

                        HacerTransaccionCuentaOrigenInput.setText("");
                        HacerTransaccionCuentaDestinoInput.setText("");
                        HacerTransaccionAmountInput.setText("");
                    }
                    break;
                }
                case "Withdraw": {
                    String sourceAccountId = HacerTransaccionCuentaOrigenInput.getText();
                    double amount = Double.parseDouble(HacerTransaccionAmountInput.getText());

                    Account sourceAccount = null;
                    for (Account account : this.accounts) {
                        if (account.getId().equals(sourceAccountId)) {
                            sourceAccount = account;
                        }
                    }
                    if (sourceAccount != null && sourceAccount.withdraw(amount)) {
                        this.transactions.add(TransactionFactory.createWithdraw(sourceAccount, amount));
                        
                        HacerTransaccionCuentaOrigenInput.setText("");
                        HacerTransaccionCuentaDestinoInput.setText("");
                        HacerTransaccionAmountInput.setText("");
                    }
                    break;
                }
                case "Transfer": {
                    String sourceAccountId = HacerTransaccionCuentaOrigenInput.getText();
                    String destinationAccountId = HacerTransaccionCuentaDestinoInput.getText();
                    double amount = Double.parseDouble(HacerTransaccionAmountInput.getText());

                    Account sourceAccount = null;
                    Account destinationAccount = null;
                    for (Account account : this.accounts) {
                        if (account.getId().equals(sourceAccountId)) {
                            sourceAccount = account;
                        }
                    }
                    for (Account account : this.accounts) {
                        if (account.getId().equals(destinationAccountId)) {
                            destinationAccount = account;
                        }
                    }
                    if (sourceAccount != null && destinationAccount != null && sourceAccount.withdraw(amount)) {
                        destinationAccount.deposit(amount);

                        this.transactions.add(TransactionFactory.createTransfer(sourceAccount, destinationAccount, amount));

                        HacerTransaccionCuentaOrigenInput.setText("");
                        HacerTransaccionCuentaDestinoInput.setText("");
                        HacerTransaccionAmountInput.setText("");
                    }
                    break;
                }
                default: {
                    HacerTransaccionCuentaOrigenInput.setText("");
                    HacerTransaccionCuentaDestinoInput.setText("");
                    HacerTransaccionAmountInput.setText("");
                    break;
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_HacerTransaccionBotonRealizarActionPerformed

    private void HacerTransaccionAmountInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HacerTransaccionAmountInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HacerTransaccionAmountInputActionPerformed

    private void CrearCuentaBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearCuentaBotonActionPerformed
        // TODO add your handling code here:
        try {
            int userId = Integer.parseInt(CrearCuentaIdUsuarioInput.getText());
            double initialBalance = Double.parseDouble(CrearCuentaBalanceInicialInput.getText());

            User selectedUser = null;
            for (User user : this.users) {
                if (user.getId() == userId && selectedUser == null) {
                    selectedUser = user;
                }
            }

            if (selectedUser != null) {
                Random random = new Random();
                int first = random.nextInt(1000);
                int second = random.nextInt(1000000);
                int third = random.nextInt(100);

                String accountId = String.format("%03d", first) + "-" + String.format("%06d", second) + "-" + String.format("%02d", third);

                this.accounts.add(new BasicAccount(accountId, selectedUser, initialBalance));

                CrearCuentaIdUsuarioInput.setText("");
                CrearCuentaBalanceInicialInput.setText("");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_CrearCuentaBotonActionPerformed

    private void RegistroUsuarioBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistroUsuarioBotonActionPerformed
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(RegistroUsuarioIdInput.getText());
            String firstname = RegistroUsuarioFirstnameInput.getText();
            String lastname = RegistroUsuarioLastnameInput.getText();
            int age = Integer.parseInt(RegistroUsuarioAgeInput.getText());

            this.users.add(new User(id, firstname, lastname, age));

            RegistroUsuarioIdInput.setText("");
            RegistroUsuarioFirstnameInput.setText("");
            RegistroUsuarioLastnameInput.setText("");
            RegistroUsuarioAgeInput.setText("");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_RegistroUsuarioBotonActionPerformed

    private void RegistroUsuarioIdInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RegistroUsuarioIdInputKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_RegistroUsuarioIdInputKeyTyped

    private void RegistroUsuarioIdInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistroUsuarioIdInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RegistroUsuarioIdInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BankFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BankFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CrearCuentaBalanceInicialInput;
    private javax.swing.JLabel CrearCuentaBalanceInicialLabel;
    private javax.swing.JButton CrearCuentaBoton;
    private javax.swing.JTextField CrearCuentaIdUsuarioInput;
    private javax.swing.JLabel CrearCuentaIdUsuarioLabel;
    private javax.swing.JLabel CrearCuentaTituloLabel;
    private javax.swing.JPanel CrearCuentaView;
    private javax.swing.JTextField HacerTransaccionAmountInput;
    private javax.swing.JLabel HacerTransaccionAmountLabel;
    private javax.swing.JButton HacerTransaccionBotonRealizar;
    private javax.swing.JTextField HacerTransaccionCuentaDestinoInput;
    private javax.swing.JLabel HacerTransaccionCuentaDestinoLabel;
    private javax.swing.JTextField HacerTransaccionCuentaOrigenInput;
    private javax.swing.JLabel HacerTransaccionCuentaOrigenLabel;
    private javax.swing.JLabel HacerTransaccionTitulo;
    private javax.swing.JComboBox<String> HacerTransaccionTypeInput;
    private javax.swing.JLabel HacerTransaccionTypeLabel;
    private javax.swing.JPanel HacerTransaccionView;
    private javax.swing.JButton ListAccountsBotonRefrescar;
    private javax.swing.JTable ListAccountsTabla;
    private javax.swing.JLabel ListAccountsTitulo;
    private javax.swing.JButton ListUsersBotonRefrescar;
    private javax.swing.JTable ListUsersTabla;
    private javax.swing.JLabel ListUsersTitle;
    private javax.swing.JButton ListaTransaccionesBotonRefrescar;
    private javax.swing.JTable ListaTransaccionesTabla;
    private javax.swing.JLabel ListaTransaccionesTitle;
    private javax.swing.JPanel ListarCuentasView;
    private javax.swing.JPanel ListarTransaccionesView;
    private javax.swing.JPanel ListarUsuariosView;
    private javax.swing.JTabbedPane PanelOpciones;
    private javax.swing.JTextField RegistroUsuarioAgeInput;
    private javax.swing.JLabel RegistroUsuarioAgeLabel;
    private javax.swing.JButton RegistroUsuarioBoton;
    private javax.swing.JTextField RegistroUsuarioFirstnameInput;
    private javax.swing.JLabel RegistroUsuarioFirstnameLabel;
    private javax.swing.JTextField RegistroUsuarioIdInput;
    private javax.swing.JLabel RegistroUsuarioIdLabel;
    private javax.swing.JTextField RegistroUsuarioLastnameInput;
    private javax.swing.JLabel RegistroUsuarioLastnameLabel;
    private javax.swing.JLabel RegistroUsuarioTituloLabel;
    private javax.swing.JPanel RegistroUsuarioView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
